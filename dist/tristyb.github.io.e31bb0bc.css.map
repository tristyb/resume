{"version":3,"sources":["node_modules/normalize-scss/sass/normalize/_normalize-mixin.scss","node_modules/normalize-scss/sass/normalize/_vertical-rhythm.scss","assets/css/elements/_elements.page.scss","assets/css/settings/_settings.colours.scss","assets/css/elements/_elements.headings.scss","assets/css/objects/_objects.section-title.scss","assets/css/objects/_objects.wrapper.scss","node_modules/sass-mq/_mq.scss","assets/css/components/_components.contact.scss","assets/css/components/_components.education.scss","assets/css/components/_components.experience.scss","assets/css/components/_components.header.scss","assets/css/components/_components.profile.scss","assets/css/components/_components.skills.scss","assets/css/utilities/_utilities.helpers.scss"],"names":[],"mappings":"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","file":"tristyb.github.io.e31bb0bc.css","sourceRoot":"..","sourcesContent":["// Helper function for the normalize() mixin.\n@function _normalize-include($section, $exclude: null) {\n  // Initialize the global variables needed by this function.\n  @if not global_variable_exists(_normalize-include) {\n    $_normalize-include: () !global;\n    $_normalize-exclude: () !global;\n  }\n  // Since we are given 2 parameters, set the global variables.\n  @if $exclude != null {\n    $include: $section;\n    // Sass doesn't have static variables, so the work-around is to stuff these\n    // values into global variables so we can access them in future calls.\n    $_normalize-include: if(type-of($include) == 'list', $include, ($include)) !global;\n    $_normalize-exclude: if(type-of($exclude) == 'list', $exclude, ($exclude)) !global;\n    @return true;\n  }\n\n  // Check if $section is in the $include list.\n  @if index($_normalize-include, $section) {\n    @return true;\n  }\n  // If $include is set to (all), make sure $section is not in $exclude.\n  @else if not index($_normalize-exclude, $section) and index($_normalize-include, all) {\n    @return true;\n  }\n  @return false;\n}\n\n@mixin normalize($include: (all), $exclude: ()) {\n  // Initialize the helper function by passing it this mixin's parameters.\n  $init: _normalize-include($include, $exclude);\n\n  // If we've customized any font variables, we'll need extra properties.\n  @if $base-line-height != 24px\n    or $base-unit != 'em'\n    or $h2-font-size != 1.5  * $base-font-size\n    or $h3-font-size != 1.17 * $base-font-size\n    or $h4-font-size != 1    * $base-font-size\n    or $h5-font-size != 0.83 * $base-font-size\n    or $h6-font-size != 0.67 * $base-font-size {\n    $normalize-vertical-rhythm: true !global;\n  }\n\n  /*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */\n\n  @if _normalize-include(document) {\n    /* Document\n       ========================================================================== */\n\n    /**\n     * 1. Correct the line height in all browsers.\n     * 2. Prevent adjustments of font size after orientation changes in\n     *    IE on Windows Phone and in iOS.\n     */\n\n    html {\n      @if $base-font-family {\n        /* Change the default font family in all browsers (opinionated). */\n        font-family: $base-font-family;\n      }\n      @if $base-font-size != 16px or $normalize-vertical-rhythm {\n        // Correct old browser bug that prevented accessible resizing of text\n        // when root font-size is set with px or em.\n        font-size: ($base-font-size / 16px) * 100%;\n      }\n      @if $normalize-vertical-rhythm {\n        line-height: ($base-line-height / $base-font-size) * 1em; /* 1 */\n      }\n      @else {\n        line-height: 1.15; /* 1 */\n      }\n      -ms-text-size-adjust: 100%; /* 2 */\n      -webkit-text-size-adjust: 100%; /* 2 */\n    }\n  }\n\n  @if _normalize-include(sections) {\n    /* Sections\n       ========================================================================== */\n\n    /**\n     * Remove the margin in all browsers (opinionated).\n     */\n\n    body {\n      margin: 0;\n    }\n\n    /**\n     * Add the correct display in IE 9-.\n     */\n\n    article,\n    aside,\n    footer,\n    header,\n    nav,\n    section {\n      display: block;\n    }\n\n    /**\n     * Correct the font size and margin on `h1` elements within `section` and\n     * `article` contexts in Chrome, Firefox, and Safari.\n     */\n\n    h1 {\n      @include normalize-font-size($h1-font-size);\n      @if $normalize-vertical-rhythm {\n        @include normalize-line-height($h1-font-size);\n      }\n\n      @if $normalize-vertical-rhythm {\n        /* Set 1 unit of vertical rhythm on the top and bottom margins. */\n        @include normalize-margin(1 0, $h1-font-size);\n      }\n      @else {\n        margin: 0.67em 0;\n      }\n    }\n\n    @if $normalize-vertical-rhythm {\n      h2 {\n        @include normalize-font-size($h2-font-size);\n        @include normalize-line-height($h2-font-size);\n        @include normalize-margin(1 0, $h2-font-size);\n      }\n\n      h3 {\n        @include normalize-font-size($h3-font-size);\n        @include normalize-line-height($h3-font-size);\n        @include normalize-margin(1 0, $h3-font-size);\n      }\n\n      h4 {\n        @include normalize-font-size($h4-font-size);\n        @include normalize-line-height($h4-font-size);\n        @include normalize-margin(1 0, $h4-font-size);\n      }\n\n      h5 {\n        @include normalize-font-size($h5-font-size);\n        @include normalize-line-height($h5-font-size);\n        @include normalize-margin(1 0, $h5-font-size);\n      }\n\n      h6 {\n        @include normalize-font-size($h6-font-size);\n        @include normalize-line-height($h6-font-size);\n        @include normalize-margin(1 0, $h6-font-size);\n      }\n    }\n  }\n\n  @if _normalize-include(grouping) {\n    /* Grouping content\n       ========================================================================== */\n\n    @if $normalize-vertical-rhythm {\n      /**\n       * Set 1 unit of vertical rhythm on the top and bottom margin.\n       */\n\n      blockquote {\n        @include normalize-margin(1 $indent-amount);\n      }\n\n      dl,\n      ol,\n      ul {\n        @include normalize-margin(1 0);\n      }\n\n      /**\n       * Turn off margins on nested lists.\n       */\n\n      ol,\n      ul {\n        ol,\n        ul {\n          margin: 0;\n        }\n      }\n\n      dd {\n        margin: 0 0 0 $indent-amount;\n      }\n\n      ol,\n      ul {\n        padding: 0 0 0 $indent-amount;\n      }\n    }\n\n    /**\n     * Add the correct display in IE 9-.\n     */\n\n    figcaption,\n    figure {\n      display: block;\n    }\n\n    /**\n     * Add the correct margin in IE 8.\n     */\n\n    figure {\n      @if $normalize-vertical-rhythm {\n        @include normalize-margin(1 $indent-amount);\n      }\n      @else {\n        margin: 1em $indent-amount;\n      }\n    }\n\n    /**\n     * 1. Add the correct box sizing in Firefox.\n     * 2. Show the overflow in Edge and IE.\n     */\n\n    hr {\n      box-sizing: content-box; /* 1 */\n      height: 0; /* 1 */\n      overflow: visible; /* 2 */\n    }\n\n    /**\n     * Add the correct display in IE.\n     */\n\n    main {\n      display: block;\n    }\n\n    @if $normalize-vertical-rhythm {\n      /**\n       * Set 1 unit of vertical rhythm on the top and bottom margin.\n       */\n\n      p,\n      pre {\n        @include normalize-margin(1 0);\n      }\n    }\n\n    /**\n     * 1. Correct the inheritance and scaling of font size in all browsers.\n     * 2. Correct the odd `em` font sizing in all browsers.\n     */\n\n    pre {\n      font-family: monospace, monospace; /* 1 */\n      font-size: 1em; /* 2 */\n    }\n  }\n\n  @if _normalize-include(links) {\n    /* Links\n       ========================================================================== */\n\n    /**\n     * 1. Remove the gray background on active links in IE 10.\n     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n     */\n\n    a {\n      background-color: transparent; /* 1 */\n      -webkit-text-decoration-skip: objects; /* 2 */\n    }\n  }\n\n  @if _normalize-include(text) {\n    /* Text-level semantics\n       ========================================================================== */\n\n    /**\n     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.\n     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n     */\n\n    abbr[title] {\n      border-bottom: none; /* 1 */\n      text-decoration: underline; /* 2 */\n      text-decoration: underline dotted; /* 2 */\n    }\n\n    /**\n     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n     */\n\n    b,\n    strong {\n      font-weight: inherit;\n    }\n\n    /**\n     * Add the correct font weight in Chrome, Edge, and Safari.\n     */\n\n    b,\n    strong {\n      font-weight: bolder;\n    }\n\n    /**\n     * 1. Correct the inheritance and scaling of font size in all browsers.\n     * 2. Correct the odd `em` font sizing in all browsers.\n     */\n\n    code,\n    kbd,\n    samp {\n      font-family: monospace, monospace; /* 1 */\n      font-size: 1em; /* 2 */\n    }\n\n    /**\n     * Add the correct font style in Android 4.3-.\n     */\n\n    dfn {\n      font-style: italic;\n    }\n\n    /**\n     * Add the correct background and color in IE 9-.\n     */\n\n    mark {\n      background-color: #ff0;\n      color: #000;\n    }\n\n    /**\n     * Add the correct font size in all browsers.\n     */\n\n    small {\n      font-size: 80%;\n    }\n\n    /**\n     * Prevent `sub` and `sup` elements from affecting the line height in\n     * all browsers.\n     */\n\n    sub,\n    sup {\n      font-size: 75%;\n      line-height: 0;\n      position: relative;\n      vertical-align: baseline;\n    }\n\n    sub {\n      bottom: -0.25em;\n    }\n\n    sup {\n      top: -0.5em;\n    }\n  }\n\n  @if _normalize-include(embedded) {\n    /* Embedded content\n       ========================================================================== */\n\n    /**\n     * Add the correct display in IE 9-.\n     */\n\n    audio,\n    video {\n      display: inline-block;\n    }\n\n    /**\n     * Add the correct display in iOS 4-7.\n     */\n\n    audio:not([controls]) {\n      display: none;\n      height: 0;\n    }\n\n    /**\n     * Remove the border on images inside links in IE 10-.\n     */\n\n    img {\n      border-style: none;\n    }\n\n    /**\n     * Hide the overflow in IE.\n     */\n\n    svg:not(:root) {\n      overflow: hidden;\n    }\n  }\n\n  @if _normalize-include(forms) {\n    /* Forms\n       ========================================================================== */\n\n    /**\n     * 1. Change the font styles in all browsers (opinionated).\n     * 2. Remove the margin in Firefox and Safari.\n     */\n\n    button,\n    input,\n    optgroup,\n    select,\n    textarea {\n      font-family: if($base-font-family, $base-font-family, sans-serif); /* 1 */\n      font-size: 100%; /* 1 */\n      @if $normalize-vertical-rhythm {\n        line-height: ($base-line-height / $base-font-size) * 1em; /* 1 */\n      }\n      @else {\n        line-height: 1.15; /* 1 */\n      }\n      margin: 0; /* 2 */\n    }\n\n    /**\n     * Show the overflow in IE.\n     */\n\n    button {\n      overflow: visible;\n    }\n\n    /**\n     * Remove the inheritance of text transform in Edge, Firefox, and IE.\n     * 1. Remove the inheritance of text transform in Firefox.\n     */\n\n    button,\n    select { /* 1 */\n      text-transform: none;\n    }\n\n    /**\n     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n     *    controls in Android 4.\n     * 2. Correct the inability to style clickable types in iOS and Safari.\n     */\n\n    button,\n    html [type=\"button\"], /* 1 */\n    [type=\"reset\"],\n    [type=\"submit\"] {\n      -webkit-appearance: button; /* 2 */\n    }\n\n    button,\n    [type=\"button\"],\n    [type=\"reset\"],\n    [type=\"submit\"] {\n\n      /**\n       * Remove the inner border and padding in Firefox.\n       */\n\n      &::-moz-focus-inner {\n        border-style: none;\n        padding: 0;\n      }\n\n      /**\n       * Restore the focus styles unset by the previous rule.\n       */\n\n      &:-moz-focusring {\n        outline: 1px dotted ButtonText;\n      }\n    }\n\n    /**\n     * Show the overflow in Edge.\n     */\n\n    input {\n      overflow: visible;\n    }\n\n    /**\n     * 1. Add the correct box sizing in IE 10-.\n     * 2. Remove the padding in IE 10-.\n     */\n\n    [type=\"checkbox\"],\n    [type=\"radio\"] {\n      box-sizing: border-box; /* 1 */\n      padding: 0; /* 2 */\n    }\n\n    /**\n     * Correct the cursor style of increment and decrement buttons in Chrome.\n     */\n\n    [type=\"number\"]::-webkit-inner-spin-button,\n    [type=\"number\"]::-webkit-outer-spin-button {\n      height: auto;\n    }\n\n    /**\n     * 1. Correct the odd appearance in Chrome and Safari.\n     * 2. Correct the outline style in Safari.\n     */\n\n    [type=\"search\"] {\n      -webkit-appearance: textfield; /* 1 */\n      outline-offset: -2px; /* 2 */\n\n      /**\n       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.\n       */\n\n      &::-webkit-search-cancel-button,\n      &::-webkit-search-decoration {\n        -webkit-appearance: none;\n      }\n    }\n\n    /**\n     * 1. Correct the inability to style clickable types in iOS and Safari.\n     * 2. Change font properties to `inherit` in Safari.\n     */\n\n    ::-webkit-file-upload-button {\n      -webkit-appearance: button; /* 1 */\n      font: inherit; /* 2 */\n    }\n\n    /**\n     * Correct the padding in Firefox.\n     */\n\n    fieldset {\n      padding: 0.35em 0.75em 0.625em;\n    }\n\n    /**\n     * 1. Correct the text wrapping in Edge and IE.\n     * 2. Correct the color inheritance from `fieldset` elements in IE.\n     * 3. Remove the padding so developers are not caught out when they zero out\n     *    `fieldset` elements in all browsers.\n     */\n\n    legend {\n      box-sizing: border-box; /* 1 */\n      display: table; /* 1 */\n      max-width: 100%; /* 1 */\n      padding: 0; /* 3 */\n      color: inherit; /* 2 */\n      white-space: normal; /* 1 */\n    }\n\n    /**\n     * 1. Add the correct display in IE 9-.\n     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.\n     */\n\n    progress {\n      display: inline-block; /* 1 */\n      vertical-align: baseline; /* 2 */\n    }\n\n    /**\n     * Remove the default vertical scrollbar in IE.\n     */\n\n    textarea {\n      overflow: auto;\n    }\n  }\n\n  @if _normalize-include(interactive) {\n    /* Interactive\n       ========================================================================== */\n\n    /*\n     * Add the correct display in Edge, IE, and Firefox.\n     */\n\n    details {\n      display: block;\n    }\n\n    /*\n     * Add the correct display in all browsers.\n     */\n\n    summary {\n      display: list-item;\n    }\n\n    /*\n     * Add the correct display in IE 9-.\n     */\n\n    menu {\n      display: block;\n\n      @if $normalize-vertical-rhythm {\n        /*\n         * 1. Set 1 unit of vertical rhythm on the top and bottom margin.\n         * 2. Set consistent space for the list style image.\n         */\n\n        @include normalize-margin(1 0); /* 1 */\n        padding: 0 0 0 $indent-amount; /* 2 */\n\n        /**\n         * Turn off margins on nested lists.\n         */\n\n        menu &,\n        ol &,\n        ul & {\n          margin: 0;\n        }\n      }\n    }\n  }\n\n  @if _normalize-include(scripting) {\n    /* Scripting\n       ========================================================================== */\n\n    /**\n     * Add the correct display in IE 9-.\n     */\n\n    canvas {\n      display: inline-block;\n    }\n\n    /**\n     * Add the correct display in IE.\n     */\n\n    template {\n      display: none;\n    }\n  }\n\n  @if _normalize-include(hidden) {\n    /* Hidden\n       ========================================================================== */\n\n    /**\n     * Add the correct display in IE 10-.\n     */\n\n    [hidden] {\n      display: none;\n    }\n  }\n}\n","//\n// Vertical Rhythm\n//\n// This is the minimal amount of code needed to create vertical rhythm in our\n// CSS. If you are looking for a robust solution, look at the excellent Typey\n// library. @see https://github.com/jptaranto/typey\n\n@function normalize-rhythm($value, $relative-to: $base-font-size, $unit: $base-unit) {\n  @if unit($value) != px {\n    @error \"The normalize vertical-rhythm module only supports px inputs. The typey library is better.\";\n  }\n  @if $unit == rem {\n    @return ($value / $base-font-size) * 1rem;\n  }\n  @else if $unit == em {\n    @return ($value / $relative-to) * 1em;\n  }\n  @else { // $unit == px\n    @return $value;\n  }\n}\n\n@mixin normalize-font-size($value, $relative-to: $base-font-size) {\n  @if unit($value) != 'px' {\n    @error \"normalize-font-size() only supports px inputs. The typey library is better.\";\n  }\n  font-size: normalize-rhythm($value, $relative-to);\n}\n\n@mixin normalize-rhythm($property, $values, $relative-to: $base-font-size) {\n  $value-list: $values;\n  $sep: space;\n  @if type-of($values) == 'list' {\n    $sep: list-separator($values);\n  }\n  @else {\n    $value-list: append((), $values);\n  }\n\n  $normalized-values: ();\n  @each $value in $value-list {\n    @if unitless($value) and $value != 0 {\n      $value: $value * normalize-rhythm($base-line-height, $relative-to);\n    }\n    $normalized-values: append($normalized-values, $value, $sep);\n  }\n  #{$property}: $normalized-values;\n}\n\n@mixin normalize-margin($values, $relative-to: $base-font-size) {\n  @include normalize-rhythm(margin, $values, $relative-to);\n}\n\n@mixin normalize-line-height($font-size, $min-line-padding: 2px) {\n  $lines: ceil($font-size / $base-line-height);\n  // If lines are cramped include some extra leading.\n  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {\n    $lines: $lines + 1;\n  }\n  @include normalize-rhythm(line-height, $lines, $font-size);\n}\n","* {\n  box-sizing: border-box;\n\n  &::before,\n  &::after {\n    box-sizing: border-box;\n  }\n}\n\nhtml,\nbody {\n  min-width: rem(320px);\n  margin: 0;\n  font-display: auto;\n  font-family: 'Times New Roman', serif;\n  color: $color--text;\n  line-height: 1.3;\n}\n\n::selection {\n  background-color: $color--primary;\n  color: $color--white;\n}\n","// Named Colours\n$color--white:         #ffffff;\n$color--black:         #444444;\n$color--grey:          #7a7a7a;\n\n$color--text:         $color--black;\n\n$color--primary:      #40c4aa;\n$color--wdd:          #cd161a;\n$color--rc:           #6ad2e7;\n$color--webhaus:      #25a25d;\n$color--code7:        #292929;\n","h1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  color: $color--primary;\n  font-weight: 400;\n  font-family: 'Times New Roman', serif;\n}\n",".o-section-title {\n  margin: 0;\n  position: relative;\n\n  &::before {\n    transform-origin: 0 50%;\n    content: attr(data-before);\n    position: absolute;\n    left: rem(-2px);\n    font-weight: 700;\n    z-index: -1;\n    font-size: 2em;\n    bottom: rem(3px);\n    opacity: .1;\n  }\n\n  &::after {\n    content: '';\n    margin-top: .35em;\n    height: 1px;\n    background-color: $color--primary;\n    display: block;\n  }\n}\n",".o-wrapper {\n  width: 90%;\n  padding: 0 rem(16px);\n  margin: 0 auto;\n  max-width: rem(800px);\n}\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n            and $media-type != 'print'\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _mq-quick-sort($list) {\n    $less:  ();\n    $equal: ();\n    $large: ();\n\n    @if length($list) > 1 {\n        $seed: nth($list, ceil(length($list) / 2));\n\n        @each $item in $list {\n            @if ($item == $seed) {\n                $equal: append($equal, $item);\n            } @else if ($item < $seed) {\n                $less: append($less, $item);\n            } @else if ($item > $seed) {\n                $large: append($large, $item);\n            }\n        }\n\n        @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large));\n    }\n\n    @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map) {\n    $map-sorted: ();\n    $map-keys: map-keys($map);\n    $map-values: map-values($map);\n    $map-values-sorted: _mq-quick-sort($map-values);\n\n    // Reorder key/value pairs based on key values\n    @each $value in $map-values-sorted {\n        $index: index($map-values, $value);\n        $key: nth($map-keys, $index);\n        $map-sorted: map-merge($map-sorted, ($key: $value));\n\n        // Unset the value in $map-values to prevent the loop\n        // from finding the same index twice\n        $map-values: set-nth($map-values, $index, 0);\n    }\n\n    @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n    $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n",".c-contact {\n  @include mq($from: tablet) {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    flex-wrap: wrap;\n  }\n}\n\n  .c-contact__title {\n    width: 100%;\n  }\n\n  .c-contact__half {\n    margin-top: rem(20px);\n\n    @include mq($from: tablet) {\n      width: 48%;\n    }\n  }\n\n    .c-contact__address,\n    .c-contact__tel,\n    .c-contact__website,\n    .c-contact__linkedin {\n      font-size: rem(16px);\n      margin: rem(10px) 0 0;\n\n      @include mq($from: tablet) {\n        font-size: rem(18px);\n      }\n    }\n\n      .c-contact__strong {\n        display: block;\n      }\n\n      .c-contact__link {\n        display: block;\n        color: $color--primary;\n        text-decoration: none;\n\n        &:hover,\n        &:focus {\n          text-decoration: underline;\n        }\n\n        &:visited {\n          color: $color--grey;\n        }\n      }\n",".c-education {}\n\n  .c-education__title {}\n\n  .c-education__institution {\n    + .c-education__institution {\n      margin-top: rem(32px);\n    }\n  }\n\n    .c-education__institution__title {\n      color: $color--text;\n      margin-bottom: rem(6px);\n\n      @include mq($from: tablet) {\n        font-size: rem(22px);\n      }\n    }\n\n    .c-education__institution__degree {\n      font-size: .75em;\n\n      @include mq($until: desktop) {\n        display: block;\n        font-size: .875em;\n      }\n    }\n\n    .c-education__institution__timescale {\n      color: $color--grey;\n      margin: 0;\n      font-size: rem(14px);\n\n      @include mq($from: tablet) {\n        font-size: rem(16px);\n      }\n    }\n\n    .c-education__institution__about {\n      font-size: rem(16px);\n\n      @include mq($from: tablet) {\n        font-size: rem(18px);\n      }\n    }\n",".c-experience {}\n\n  .c-experience__title {}\n\n  .c-experience__job {\n    + .c-experience__job {\n      margin-top: rem(32px);\n    }\n  }\n\n    .c-experience__job__title {\n      color: $color--text;\n      margin-bottom: rem(6px);\n\n      @include mq($from: tablet) {\n        font-size: rem(22px);\n      }\n    }\n\n    .c-experience__job__company {\n      font-size: .75em;\n\n      @include mq($until: desktop) {\n        display: block;\n        font-size: .875em;\n      }\n    }\n\n    .c-experience__job__timescale {\n      color: $color--grey;\n      margin: 0;\n      font-size: rem(14px);\n\n      @include mq($from: tablet) {\n        font-size: rem(16px);\n      }\n    }\n\n    .c-experience__job__description {\n      font-size: rem(16px);\n\n      @include mq($from: tablet) {\n        font-size: rem(18px);\n      }\n    }\n",".c-header {\n  padding: rem(24px) 0;\n\n  @include mq($from: tablet) {\n    padding-top: rem(36px);\n  }\n\n  .o-wrapper {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n  }\n}\n\n  .c-header__image {\n    width: rem(100px);\n    border-radius: 50%;\n\n    @include mq($from: landscape) {\n      width: rem(150px);\n    }\n  }\n\n  .c-header__title {\n    font-size: rem(20px);\n    line-height: 1;\n    margin: 0 0 0 rem(10px);\n\n    @include mq($from: landscape) {\n      font-size: rem(28px);\n      margin-left: rem(20px);\n    }\n\n    @include mq($from: tablet) {\n      font-size: rem(34px);\n    }\n  }\n\n    .c-header__job {\n      display: block;\n      color: $color--grey;\n      font-size: .75em;\n    }\n",".c-profile {}\n\n  .c-profile__title {}\n\n  .c-profile__text {\n    font-size: rem(16px);\n    hyphens: manual;\n    max-width: rem(600px);\n\n    @include mq($from: tablet) {\n      font-size: rem(18px);\n    }\n\n    &--lede {\n      font-size: rem(20px);\n      color: $color--grey;\n\n      @include mq($from: tablet) {\n        font-size: rem(24px);\n      }\n    }\n  }\n",".c-skills {}\n\n  .c-skills__title {}\n\n  .c-skills__subtitle {\n    font-size: rem(20px);\n    margin-top: 1.25em;\n\n    @include mq($from: tablet) {\n      font-size: rem(24px);\n    }\n  }\n\n  .c-skills__list {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n    columns: 2;\n    column-gap: rem(10px);\n\n    @include mq($from: tablet) {\n      columns: 3;\n    }\n  }\n\n    .c-skills__skill {\n      font-size: rem(16px);\n      width: 90%;\n      margin-bottom: .875em;\n\n      @include mq($from: tablet) {\n        font-size: rem(18px);\n      }\n    }\n",".u-push {\n  margin-top: rem(24px);\n\n  &--big {\n    margin-top: rem(36px);\n  }\n}\n\n.u-bottom {\n  padding-bottom: rem(24px);\n\n  @include mq($from: tablet) {\n    padding-bottom: rem(36px);\n  }\n}\n\n.u-wdd {\n  color: $color--wdd;\n}\n\n.u-freelance {\n  color: $color--primary;\n}\n\n.u-rc {\n  color: $color--rc;\n}\n\n.u-wh {\n  color: $color--webhaus;\n}\n\n.u-c7 {\n  color: $color--code7;\n}\n"]}